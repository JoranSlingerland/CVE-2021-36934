#Requires -RunAsAdministrator

#check if vulnerable
$vulnerable = $false

if ($vulnerable -eq $false) {
    $checkPermissions = icacls c:\Windows\System32\config\sam
    if ($checkPermissions -like '*BUILTIN\Users:(I)(RX*)*' -or $checkPermissions -like '*INGEBOUWD\Gebruikers:(I)(RX*)*') {
    $vulnerable = $true
    }
}

if ($vulnerable -eq $false) {
    $checkPermissions = icacls C:\Windows\System32\config\SYSTEM
    if ($checkPermissions -like '*BUILTIN\Users:(I)(RX*)*' -or $checkPermissions -like '*INGEBOUWD\Gebruikers:(I)(RX*)*') {
        $vulnerable = $true
    } 
}

if ($vulnerable -eq $false) {
    $checkPermissions = icacls C:\Windows\System32\config\SECURITY
    if ($checkPermissions -like '*BUILTIN\Users:(I)(RX*)*' -or $checkPermissions -like '*INGEBOUWD\Gebruikers:(I)(RX*)*') {
        $vulnerable = $true
    } 
}
$vulnerable

#change permissions and delete shadows
if ($vulnerable) {
    icacls c:\windows\system32\config\*.* /inheritance:e
    vssadmin delete shadows /quiet /all
}

#check permissions
if ($vulnerable -eq $true) {
    $checkPermissions = icacls C:\windows\system32\config\sam
    if ($checkPermissions -like '*BUILTIN\Users:(I)(RX*)*' -or $checkPermissions -like '*INGEBOUWD\Gebruikers:(I)(RX*)*') {
        $permissionsSucces = $false
    }
    else {
        $permissionsSucces = $true
    }
}

#check shadow
if ($vulnerable -eq $true) {
    $checkShadow = Get-WmiObject Win32_ShadowStorage -Property Volume
    if ($null -eq $checkShadow) {
        $shadowSucces = $true
    }
    else {
        $shadowSucces = $false
    }
}

#check if fixed logic
if ($vulnerable -eq $true) {
    if ($permissionsSucces -eq $true -and $shadowSucces -eq $true) {
        $fixed = $true
    }
    else {
        $fixed = $false
    }
}
else {
    $fixed = 'Not applicable'
}

#create new shadow
if ($vulnerable -eq $true -and $shadowSucces -eq $true -and $permissionsSucces -eq $true) {
    wmic shadowcopy call create Volume='C:\'
}

#output data
write-host "vulnerable: $vulnerable"
write-host "Fixed: $fixed"
